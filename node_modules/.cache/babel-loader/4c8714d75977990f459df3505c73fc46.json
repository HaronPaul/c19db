{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/shit/c19db/src/components/news/news.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useMemo } from 'react';\nimport '../../styles/news.css';\nimport DateFnsUtils from '@date-io/date-fns';\nimport WeeklyCaseChart from './weeklyCaseChart';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport { useState } from 'react';\nimport NewsCard from './newsCard';\nimport Pagination from './pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PageSize = 5;\n\nconst NewsPage = props => {\n  _s();\n\n  // News and date data variables\n  const [dateInput, setDateInput] = useState(Date.now());\n  const [newsList, setNewsList] = useState([]); // Pagination-related variables\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const currentNewsData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return newsList.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, newsList]); // This will convert the output date from the date picker to 'YYYY-MM-DD'\n\n  function convertDateFormat(str) {\n    var date = new Date(str),\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n        day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  } // Changes the state of the input date when user picks a date from the date picked\n\n\n  const handleDateChange = date => {\n    setDateInput(date);\n  }; // Call convertDateFormat and also gets the list of news from the server\n\n\n  const handleButtonClick = () => {\n    const newDate = convertDateFormat(dateInput);\n    getNews(newDate);\n  }; // This is where the GET request happens\n\n\n  const getNews = async date => {\n    const response = await axios.get(`http://localhost:5000/news/${date}`);\n    console.log(response.data.data);\n    setNewsList(response.data.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-heading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Timeline And Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"See the latest updates of Covid-19 in the Philippines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeeklyCaseChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Get Latest Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"MM/dd/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Date picker inline\",\n            value: dateInput,\n            onChange: handleDateChange,\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleButtonClick,\n          children: \"Show Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"articles-container\",\n        children: [newsList.length == 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" No COVID-19 related news added in this date yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), newsList.length > 0 && currentNewsData.map(article => {\n          const {\n            news_title,\n            news_link,\n            news_source\n          } = article;\n          return /*#__PURE__*/_jsxDEV(NewsCard, {\n            id: news_title,\n            title: news_title,\n            link: news_link,\n            source: news_source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 32\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Pagination, {\n          className: \"pagination-bar\",\n          currentPage: currentPage,\n          totalCount: newsList.length,\n          pageSize: PageSize,\n          onPageChange: page => setCurrentPage(page)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewsPage, \"dBNoDd3B2y8ksGVUeH2tWlc0Z8Q=\");\n\n_c = NewsPage;\nexport default NewsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsPage\");","map":{"version":3,"sources":["/Users/admin/Desktop/shit/c19db/src/components/news/news.jsx"],"names":["axios","React","useMemo","DateFnsUtils","WeeklyCaseChart","Grid","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","useState","NewsCard","Pagination","PageSize","NewsPage","props","dateInput","setDateInput","Date","now","newsList","setNewsList","currentPage","setCurrentPage","currentNewsData","firstPageIndex","lastPageIndex","slice","convertDateFormat","str","date","mnth","getMonth","day","getDate","getFullYear","join","handleDateChange","handleButtonClick","newDate","getNews","response","get","console","log","data","length","map","article","news_title","news_link","news_source","page"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useMemo } from 'react'\r\nimport '../../styles/news.css'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport WeeklyCaseChart from './weeklyCaseChart'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { useState } from 'react'\r\nimport NewsCard from './newsCard'\r\nimport Pagination from './pagination'\r\n\r\nlet PageSize = 5\r\n\r\nconst NewsPage = (props) => {\r\n    // News and date data variables\r\n    const [dateInput, setDateInput] = useState(Date.now())\r\n    const [newsList, setNewsList] = useState([])\r\n\r\n    \r\n    // Pagination-related variables\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    \r\n    const currentNewsData = useMemo(() => {\r\n        const firstPageIndex = (currentPage - 1) * PageSize\r\n        const lastPageIndex = firstPageIndex + PageSize\r\n        return newsList.slice(firstPageIndex, lastPageIndex);\r\n    }, [currentPage, newsList])\r\n\r\n    // This will convert the output date from the date picker to 'YYYY-MM-DD'\r\n    function convertDateFormat(str) {\r\n        var date = new Date(str),\r\n          mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n          day = (\"0\" + date.getDate()).slice(-2);\r\n        return [date.getFullYear(), mnth, day].join(\"-\");\r\n    }\r\n\r\n    // Changes the state of the input date when user picks a date from the date picked\r\n    const handleDateChange = (date) => {\r\n        setDateInput(date)\r\n    }\r\n\r\n    // Call convertDateFormat and also gets the list of news from the server\r\n    const handleButtonClick = () => {\r\n        const newDate = convertDateFormat(dateInput)\r\n        getNews(newDate)\r\n    }\r\n\r\n    // This is where the GET request happens\r\n    const getNews = async (date) => {\r\n        const response = await axios.get(`http://localhost:5000/news/${date}`)\r\n        console.log(response.data.data)\r\n        setNewsList(response.data.data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"newsContainer\">\r\n            <div className=\"main-heading-container\">\r\n                <h1>Timeline And Events</h1>\r\n                <h3>See the latest updates of Covid-19 in the Philippines</h3>\r\n            </div>\r\n            \r\n            <WeeklyCaseChart/>\r\n            <div className=\"news-container\">\r\n                <h1>Get Latest Events</h1>\r\n                <div className=\"date-input-container\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Date picker inline\"\r\n                            value={dateInput}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <button onClick={handleButtonClick}>Show Events</button>\r\n                </div>\r\n\r\n                <div className=\"articles-container\">\r\n\r\n                    { newsList.length == 0 && \r\n                        <h2> No COVID-19 related news added in this date yet</h2>\r\n                    }\r\n\r\n                    \r\n                    { newsList.length > 0 && currentNewsData.map((article) => {\r\n                        const {news_title, news_link, news_source} = article\r\n                        return <NewsCard id={news_title} title={news_title} link={news_link} source={news_source} />\r\n                        })\r\n                    }\r\n                    \r\n                    <Pagination\r\n                        className=\"pagination-bar\"\r\n                        currentPage={currentPage}\r\n                        totalCount={newsList.length}\r\n                        pageSize={PageSize}\r\n                        onPageChange={page => setCurrentPage(page)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsPage"]},"metadata":{},"sourceType":"module"}