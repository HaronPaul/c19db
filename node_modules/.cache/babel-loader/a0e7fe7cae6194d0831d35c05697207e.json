{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Midyear2021/Razza/deployment/c19db/src/components/home/caseChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport axios from 'axios';\nimport dateFormat from 'dateformat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CasesChart() {\n  _s();\n\n  const [data, setData] = useState({}); // load Data from server\n\n  useEffect(() => {\n    try {\n      let chartData;\n\n      async function getData() {\n        const response = await axios.get('http://localhost:5000/home');\n        chartData = response.data.data;\n        setData(chartData.counts);\n      }\n\n      getData();\n    } catch (e) {\n      console.error(e);\n    }\n  }, []);\n  console.log(data); // make function that follows rechart's data format\n  // const daily = [\n  //     {\n  //         \"date\": date,\n  //         \"newcases\": cases,\n  //     }\n  // ]\n\n  var dailyArr = [];\n\n  function reformatDaily() {\n    let a;\n\n    for (a in data.daily) {\n      dailyArr.push({\n        \"date\": dateFormat(a, \"mediumDate\"),\n        \"New Cases\": data.daily[a].newCase,\n        \"Recoveries\": data.daily[a].recovery,\n        \"Deaths\": data.daily[a].death,\n        // \"Cumulative Deaths up to this Day\": data.daily[a].cumulative,\n        \"Cumulative\": data.daily[a].cumulative\n      });\n    }\n  }\n\n  reformatDaily(); // console.log(dailyArr);\n\n  var weeklyArr = [];\n\n  function reformatWeekly() {\n    let a;\n\n    for (a in data.weekly) {\n      weeklyArr.push({\n        \"date\": dateFormat(a, \"mediumDate\"),\n        \"New Cases\": data.weekly[a].newCase,\n        \"Recoveries\": data.weekly[a].recovery,\n        \"Deaths\": data.weekly[a].death\n      });\n    }\n  }\n\n  reformatWeekly();\n\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      // console.log(payload)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-graph-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-date\",\n          children: `${label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cases: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 45\n          }, this), `${payload[0].value}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Recoveries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 45\n          }, this), \" \", `${payload[0].payload[\"Recoveries\"]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Deaths:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 45\n          }, this), \" \", `${payload[0].payload[\"Deaths\"]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cumulative Cases:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 45\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 70\n          }, this), `${payload[0].payload[\"Cumulative\"]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this);\n    }\n\n    return null;\n  };\n\n  const WeeklyTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      // console.log(payload)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-graph-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-date\",\n          children: `${label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cumulative Cases: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 45\n          }, this), `${payload[0].value}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Recoveries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 45\n          }, this), \" \", `${payload[0].payload[\"Recoveries\"]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Deaths:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 45\n          }, this), \" \", `${payload[0].payload[\"Deaths\"]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-chart\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 1150,\n        height: 340,\n        data: dailyArr,\n        margin: {\n          top: 0,\n          right: 0,\n          left: 0,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          tick: {\n            fontSize: 11\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"New Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"New Cases\",\n          stroke: \"rgba(33,147,176,1)\",\n          dot: {\n            r: 1\n          },\n          activeDot: {\n            r: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CasesChart, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = CasesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasesChart\");","map":{"version":3,"sources":["/Users/admin/Desktop/Midyear2021/Razza/deployment/c19db/src/components/home/caseChart.jsx"],"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","axios","dateFormat","CasesChart","data","setData","chartData","getData","response","get","counts","e","console","error","log","dailyArr","reformatDaily","a","daily","push","newCase","recovery","death","cumulative","weeklyArr","reformatWeekly","weekly","CustomTooltip","active","payload","label","length","value","WeeklyTooltip","top","right","left","bottom","fontSize","r"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from \"recharts\";\nimport axios from 'axios'\nimport dateFormat from 'dateformat'\n\nexport default function CasesChart() {\n    const [data, setData] = useState({});\n\n    // load Data from server\n    useEffect(() => {\n        try{\n            let chartData;\n    \n            async function getData() {\n                const response = await axios.get('http://localhost:5000/home')\n                chartData = response.data.data\n\n                setData(chartData.counts)\n            }\n            getData()\n        }catch (e){\n            console.error(e)\n        }\n    }, []);\n    console.log(data)\n\n    // make function that follows rechart's data format\n    // const daily = [\n    //     {\n    //         \"date\": date,\n    //         \"newcases\": cases,\n    //     }\n    // ]\n    \n    var dailyArr=[]\n    function reformatDaily() {\n        let a;\n        for(a in data.daily){\n            dailyArr.push(\n                {\"date\":dateFormat(a,\"mediumDate\"), \n                \"New Cases\": data.daily[a].newCase,\n                \"Recoveries\": data.daily[a].recovery,\n                \"Deaths\": data.daily[a].death,\n                // \"Cumulative Deaths up to this Day\": data.daily[a].cumulative,\n                \"Cumulative\": data.daily[a].cumulative,\n                }\n            )       \n        }\n    }\n\n    reformatDaily();\n    // console.log(dailyArr);\n\n    var weeklyArr=[]\n    function reformatWeekly() {\n        let a;\n        for(a in data.weekly){\n            weeklyArr.push(\n                {\"date\":dateFormat(a,\"mediumDate\"), \n                \"New Cases\": data.weekly[a].newCase,\n                \"Recoveries\": data.weekly[a].recovery,\n                \"Deaths\": data.weekly[a].death,\n                }\n            );\n        }\n    }\n\n    reformatWeekly();\n\n    const CustomTooltip = ({ active, payload, label }: any) => {\n        if (active && payload && payload.length) {\n            // console.log(payload)\n            return (\n            <div className=\"daily-graph-tooltip\">\n                <p className=\"tooltip-date\">{`${label}`}</p>\n                <p className=\"tooltip-data\"><b>Cases: </b>{`${payload[0].value}`}</p>\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${payload[0].payload[\"Recoveries\"]}`}</p>\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${payload[0].payload[\"Deaths\"]}`}</p>\n                <p className=\"tooltip-data\"><b>Cumulative Cases:</b> <br/>{`${payload[0].payload[\"Cumulative\"]}`}</p>\n            </div>\n            );\n    }\n        return null;\n    };\n\n    const WeeklyTooltip = ({ active, payload, label }: any) => {\n        if (active && payload && payload.length) {\n            // console.log(payload)\n            return (\n            <div className=\"daily-graph-tooltip\">\n                <p className=\"tooltip-date\">{`${label}`}</p>\n                <p className=\"tooltip-data\"><b>Cumulative Cases: </b>{`${payload[0].value}`}</p>\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${payload[0].payload[\"Recoveries\"]}`}</p>\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${payload[0].payload[\"Deaths\"]}`}</p>\n            </div>\n            );\n    }\n        return null;\n    };\n\n    return (\n            <div className = \"main-chart\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart\n                    width={1150}\n                    height={340}\n                    data={dailyArr}\n                    margin={{\n                        top: 0,\n                        right: 0,\n                        left: 0,\n                        bottom: 0,\n                    }}\n                    >\n                        \n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\n                        <YAxis dataKey=\"New Cases\" />\n                        <Tooltip content={<CustomTooltip/>}/>\n                        <Line type=\"monotone\" dataKey=\"New Cases\" stroke=\"rgba(33,147,176,1)\" dot = {{r:1}} activeDot={{ r: 4 }} />\n                        <Legend />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}