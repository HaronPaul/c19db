{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haron Paul Lorente\\\\Desktop\\\\c19db\\\\src\\\\components\\\\news\\\\weeklyCaseChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport dateFormat from 'dateformat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeeklyCaseChart = props => {\n  _s();\n\n  const [data, setData] = useState({});\n  useEffect(() => {\n    try {\n      let chartData;\n\n      async function getData() {\n        const response = await axios.get('http://localhost:5000/home');\n        chartData = response.data.data;\n        setData(chartData.counts);\n      }\n\n      getData();\n    } catch (e) {\n      console.error(e);\n    }\n  }, []);\n  var weeklyArr = [];\n\n  function reformatWeekly() {\n    let a;\n\n    for (a in data.weekly) {\n      weeklyArr.push({\n        \"date\": dateFormat(a, \"mediumDate\"),\n        \"New Cases\": data.weekly[a].newCase,\n        \"Recoveries\": data.weekly[a].recovery,\n        \"Deaths\": data.weekly[a].death\n      });\n    }\n  }\n\n  reformatWeekly();\n\n  const WeeklyTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      // console.log(payload)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-graph-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-date\",\n          children: `${label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Cumulative Cases: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 45\n          }, this), `${payload[0].value}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Recoveries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 45\n          }, this), \" \", `${payload[0].payload[\"Recoveries\"]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Deaths:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 45\n          }, this), \" \", `${payload[0].payload[\"Deaths\"]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-chart\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 1150,\n        height: 340,\n        data: weeklyArr,\n        margin: {\n          top: 0,\n          right: 0,\n          left: 0,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          tick: {\n            fontSize: 11\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"New Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(WeeklyTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"New Cases\",\n          stroke: \"rgba(33,147,176,1)\",\n          dot: {\n            r: 1\n          },\n          activeDot: {\n            r: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeeklyCaseChart, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = WeeklyCaseChart;\nexport default WeeklyCaseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeeklyCaseChart\");","map":{"version":3,"sources":["C:/Users/Haron Paul Lorente/Desktop/c19db/src/components/news/weeklyCaseChart.jsx"],"names":["React","useState","useEffect","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","dateFormat","WeeklyCaseChart","props","data","setData","chartData","getData","response","get","counts","e","console","error","weeklyArr","reformatWeekly","a","weekly","push","newCase","recovery","death","WeeklyTooltip","active","payload","label","length","value","top","right","left","bottom","fontSize","r"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n    ResponsiveContainer\r\n} from \"recharts\";\r\nimport dateFormat from 'dateformat' \r\n\r\nconst WeeklyCaseChart = (props) => {\r\n\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        try{\r\n            let chartData;\r\n    \r\n            async function getData() {\r\n                const response = await axios.get('http://localhost:5000/home')\r\n                chartData = response.data.data\r\n\r\n                setData(chartData.counts)\r\n            }\r\n            getData()\r\n        }catch (e){\r\n            console.error(e)\r\n        }\r\n    }, []);\r\n\r\n    var weeklyArr=[]\r\n    function reformatWeekly() {\r\n        let a;\r\n        for(a in data.weekly){\r\n            weeklyArr.push(\r\n                {\"date\":dateFormat(a,\"mediumDate\"), \r\n                \"New Cases\": data.weekly[a].newCase,\r\n                \"Recoveries\": data.weekly[a].recovery,\r\n                \"Deaths\": data.weekly[a].death,\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    reformatWeekly();\r\n\r\n    const WeeklyTooltip = ({ active, payload, label }: any) => {\r\n        if (active && payload && payload.length) {\r\n            // console.log(payload)\r\n            return (\r\n            <div className=\"daily-graph-tooltip\">\r\n                <p className=\"tooltip-date\">{`${label}`}</p>\r\n                <p className=\"tooltip-data\"><b>Cumulative Cases: </b>{`${payload[0].value}`}</p>\r\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${payload[0].payload[\"Recoveries\"]}`}</p>\r\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${payload[0].payload[\"Deaths\"]}`}</p>\r\n            </div>\r\n            );\r\n    }\r\n        return null;\r\n    };\r\n\r\n    return(\r\n        <div className = \"main-chart\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n            width={1150}\r\n            height={340}\r\n            data={weeklyArr}\r\n            margin={{\r\n                top: 0,\r\n                right: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n            }}\r\n            >\r\n                \r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\r\n                <YAxis dataKey=\"New Cases\" />\r\n                <Tooltip content={<WeeklyTooltip/>}/>\r\n                <Line type=\"monotone\" dataKey=\"New Cases\" stroke=\"rgba(33,147,176,1)\" dot = {{r:1}} activeDot={{ r: 4 }} />\r\n                <Legend />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default WeeklyCaseChart"]},"metadata":{},"sourceType":"module"}