{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haron Paul Lorente\\\\Desktop\\\\c19db\\\\src\\\\components\\\\home\\\\vaxChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../../styles/casesChart.css';\nimport axios from 'axios';\nimport { AreaChart, //   ReferenceDot,\n//   ReferenceLine,\nXAxis, YAxis, CartesianGrid, Tooltip, Legend, Area, ResponsiveContainer } from \"recharts\";\nimport dateFormat from 'dateformat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VaxChart = () => {\n  _s();\n\n  const [vaxData, setVaxData] = useState({});\n  const intlNumberFormat = new Intl.NumberFormat('en-US');\n  useEffect(() => {\n    try {\n      async function getData() {\n        const response = await axios.get('http://localhost:5000/vaccinations'); // console.log(response.data.data)\n\n        setVaxData(response.data.data);\n      }\n\n      getData();\n    } catch (e) {\n      console.log('Error on fetching data from vaccinations route', e);\n    }\n  }, []);\n  console.log(vaxData);\n  /**\r\n      Make a funciton that transfroms vax data into recharts format\r\n      const daily = [\r\n          \"Date\" : date,\r\n          \"Vaccination Count\": vaxcount\r\n      ]\r\n  */\n\n  var daily = [];\n\n  function transformVaxData() {\n    let a;\n\n    for (a in vaxData.graphData) {\n      if (vaxData.graphData[a].total_vaccinations !== 0) {\n        daily.push({\n          \"date\": dateFormat(vaxData.graphData[a].case_date, \"mediumDate\"),\n          \"Vaccination Count\": vaxData.graphData[a].total_vaccinations\n        });\n      }\n    }\n  }\n\n  transformVaxData();\n  console.log(daily);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-chart\",\n    id: \"vax-chart\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      length: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        width: 1150,\n        height: 340,\n        data: daily,\n        margin: {\n          top: 30,\n          right: 30,\n          left: 30,\n          bottom: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"colorUv\",\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"5%\",\n              stopColor: \"rgba(255,195,113,1)\",\n              stopOpacity: 0.8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"98%\",\n              stopColor: \"rgba(255,195,113,1)\",\n              stopOpacity: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          tick: {\n            fontSize: 11\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          type: \"number\",\n          interval: \"preserveStartEnd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"Vaccination Count\",\n          stroke: \"rgba(255,195,113,1)\",\n          fillOpacity: 1,\n          fill: \"url(#colorUv)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VaxChart, \"b+qvfGTLXq1/FwOHpyjEal+L3Zc=\");\n\n_c = VaxChart;\nexport default VaxChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"VaxChart\");","map":{"version":3,"sources":["C:/Users/Haron Paul Lorente/Desktop/c19db/src/components/home/vaxChart.jsx"],"names":["React","useEffect","useState","axios","AreaChart","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Area","ResponsiveContainer","dateFormat","VaxChart","vaxData","setVaxData","intlNumberFormat","Intl","NumberFormat","getData","response","get","data","e","console","log","daily","transformVaxData","a","graphData","total_vaccinations","push","case_date","top","right","left","bottom","fontSize"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\r\nimport '../../styles/casesChart.css';\r\nimport axios from 'axios';\r\nimport {\r\n  AreaChart,\r\n//   ReferenceDot,\r\n//   ReferenceLine,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Area,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport dateFormat from 'dateformat'\r\n\r\n\r\n\r\n\r\nconst VaxChart = () => {\r\n    const [vaxData,setVaxData] = useState({});\r\n\r\n    const intlNumberFormat = new Intl.NumberFormat('en-US')\r\n\r\n    useEffect(() => {\r\n        try{\r\n            async function getData() {\r\n                const response = await axios.get('http://localhost:5000/vaccinations')\r\n                // console.log(response.data.data)\r\n\r\n                setVaxData(response.data.data)\r\n            }\r\n            getData()\r\n        }catch (e){\r\n            console.log('Error on fetching data from vaccinations route', e)\r\n        }\r\n    }, []);\r\n    console.log(vaxData);\r\n\r\n    /**\r\n        Make a funciton that transfroms vax data into recharts format\r\n        const daily = [\r\n            \"Date\" : date,\r\n            \"Vaccination Count\": vaxcount\r\n        ]\r\n    */\r\n\r\n    var daily = []\r\n    \r\n    function transformVaxData(){\r\n        let a;\r\n        for(a in vaxData.graphData){\r\n            if(vaxData.graphData[a].total_vaccinations !== 0){\r\n                daily.push(\r\n                    {\r\n                        \"date\":dateFormat(vaxData.graphData[a].case_date,\"mediumDate\"),\r\n                        \"Vaccination Count\": vaxData.graphData[a].total_vaccinations\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    transformVaxData()\r\n\r\n    console.log(daily)\r\n\r\n\r\n    return(\r\n        <div className= \"main-chart\" id=\"vax-chart\">\r\n            <ResponsiveContainer width=\"100%\" length=\"100%\">\r\n                <AreaChart\r\n                width={1150}\r\n                height={340}\r\n                data={daily}\r\n                margin={{\r\n                top: 30,\r\n                right: 30,\r\n                left: 30,\r\n                bottom: 30,\r\n                }}>\r\n                    <defs>\r\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"rgba(255,195,113,1)\" stopOpacity={0.8}/>\r\n                            <stop offset=\"98%\" stopColor=\"rgba(255,195,113,1)\" stopOpacity={0}/>\r\n                        </linearGradient>\r\n                    </defs>\r\n                       \r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\r\n                    <YAxis type=\"number\" interval = \"preserveStartEnd\"/>\r\n                    <Tooltip/>\r\n                    <Area type=\"monotone\" dataKey=\"Vaccination Count\" stroke=\"rgba(255,195,113,1)\" fillOpacity={1} fill=\"url(#colorUv)\" />\r\n                    <Legend />\r\n        \r\n                        \r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VaxChart;"]},"metadata":{},"sourceType":"module"}