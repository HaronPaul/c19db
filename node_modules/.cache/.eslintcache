[{"/home/yeahpoy/Desktop/c19db/src/index.js":"1","/home/yeahpoy/Desktop/c19db/src/reportWebVitals.js":"2","/home/yeahpoy/Desktop/c19db/src/App.js":"3","/home/yeahpoy/Desktop/c19db/src/components/navigationBar.jsx":"4","/home/yeahpoy/Desktop/c19db/src/components/footer.jsx":"5","/home/yeahpoy/Desktop/c19db/src/components/home/homepage.jsx":"6","/home/yeahpoy/Desktop/c19db/src/components/vaccinations/vaccinations.jsx":"7","/home/yeahpoy/Desktop/c19db/src/components/informationPage/infoPage.jsx":"8","/home/yeahpoy/Desktop/c19db/src/components/regional/regional.jsx":"9","/home/yeahpoy/Desktop/c19db/src/components/news/news.jsx":"10","/home/yeahpoy/Desktop/c19db/src/components/news/pagination.js":"11","/home/yeahpoy/Desktop/c19db/src/components/home/overviewContainer.jsx":"12","/home/yeahpoy/Desktop/c19db/src/components/home/caseChart.jsx":"13","/home/yeahpoy/Desktop/c19db/src/components/home/information.jsx":"14","/home/yeahpoy/Desktop/c19db/src/components/home/regionalOverview.jsx":"15","/home/yeahpoy/Desktop/c19db/src/components/home/vaxChart.jsx":"16","/home/yeahpoy/Desktop/c19db/src/components/regional/regionalTable.jsx":"17","/home/yeahpoy/Desktop/c19db/src/components/news/newsCard.jsx":"18","/home/yeahpoy/Desktop/c19db/src/components/news/weeklyCaseChart.jsx":"19","/home/yeahpoy/Desktop/c19db/src/components/home/caseData.jsx":"20","/home/yeahpoy/Desktop/c19db/src/components/news/usePagination.jsx":"21","/home/yeahpoy/Desktop/c19db/src/components/home/regionalPieChart.jsx":"22","/home/yeahpoy/Desktop/c19db/src/components/home/loader.jsx":"23","/home/yeahpoy/Desktop/c19db/src/components/regional/regionalLineChart.jsx":"24"},{"size":226,"mtime":1629429557605,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1629429557605,"results":"27","hashOfConfig":"26"},{"size":1177,"mtime":1629429557577,"results":"28","hashOfConfig":"26"},{"size":556,"mtime":1629429638121,"results":"29","hashOfConfig":"26"},{"size":205,"mtime":1629429557605,"results":"30","hashOfConfig":"26"},{"size":2041,"mtime":1629429638121,"results":"31","hashOfConfig":"26"},{"size":7493,"mtime":1629429638121,"results":"32","hashOfConfig":"26"},{"size":941,"mtime":1629429557605,"results":"33","hashOfConfig":"26"},{"size":4056,"mtime":1629429638121,"results":"34","hashOfConfig":"26"},{"size":4279,"mtime":1629429557605,"results":"35","hashOfConfig":"26"},{"size":2225,"mtime":1629429557605,"results":"36","hashOfConfig":"26"},{"size":989,"mtime":1629429557605,"results":"37","hashOfConfig":"26"},{"size":4729,"mtime":1629429638121,"results":"38","hashOfConfig":"26"},{"size":4456,"mtime":1629429557605,"results":"39","hashOfConfig":"26"},{"size":3344,"mtime":1629429557605,"results":"40","hashOfConfig":"26"},{"size":3037,"mtime":1629429638121,"results":"41","hashOfConfig":"26"},{"size":2528,"mtime":1629429638121,"results":"42","hashOfConfig":"26"},{"size":382,"mtime":1629429557605,"results":"43","hashOfConfig":"26"},{"size":3068,"mtime":1629429638121,"results":"44","hashOfConfig":"26"},{"size":3093,"mtime":1629429638121,"results":"45","hashOfConfig":"26"},{"size":2019,"mtime":1629429557605,"results":"46","hashOfConfig":"26"},{"size":549,"mtime":1629429557605,"results":"47","hashOfConfig":"26"},{"size":189,"mtime":1629429557605,"results":"48","hashOfConfig":"26"},{"size":1872,"mtime":1629429638121,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"1gf34ym",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yeahpoy/Desktop/c19db/src/index.js",["108"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","/home/yeahpoy/Desktop/c19db/src/reportWebVitals.js",[],"/home/yeahpoy/Desktop/c19db/src/App.js",["109","110"],"import React from 'react';\nimport './App.css';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n//   Redirect,\n//   useParams\n} from \"react-router-dom\";\n\n\nimport NavigationBar from './components/navigationBar'\nimport Home from './components/home/homepage'\nimport Vaccinations from './components/vaccinations/vaccinations';\nimport Regional from './components/regional/regional'\nimport NewsPage from './components/news/news';\nimport Footer from './components/footer'\nimport InfoPage from './components/informationPage/infoPage'\nimport News from './components/news/news'\n\nfunction App() {\n  return (\n    <div>\n        <BrowserRouter>\n          <NavigationBar/>\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n                    {/* <Route path=\"*\" render={() => <Redirect to=\"/\" />} /> */}\n              <Route exact path=\"/vaccinations\" component={Vaccinations}/>\n              <Route exact path=\"/regional\" component={Regional}/>\n              <Route exact path=\"/news\" component={NewsPage}/>\n              <Route exact path=\"/info\" component={InfoPage}/>\n\n            </Switch>\n        \n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/yeahpoy/Desktop/c19db/src/components/navigationBar.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/footer.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/home/homepage.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/vaccinations/vaccinations.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/informationPage/infoPage.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/regional/regional.jsx",["111","112"],"import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, CustomTooltip, Legend, ResponsiveContainer } from 'recharts';\nimport RegionalTable from './regionalTable';\nimport '../../styles/regional.css'\n\nconst Regional = (props) => {\n\n    const [totals, setTotals] = useState([])\n    const [daily, setDaily] = useState([])\n\n    const numFormatter = new Intl.NumberFormat('en-US')\n\n    useEffect(() => {\n        console.log(\"In regional page\")\n        try {\n            const getData = async() => {\n                const response = await axios.get('http://localhost:5000/regional')\n                setTotals(response.data.data.totals)\n                setDaily(response.data.data.daily)\n            }\n            getData()\n        }\n        catch(err) {\n            console.log(err)\n        }\n    }, [])\n\n    console.log(totals)\n    console.log(daily)\n\n    const CustomizedAxisTick = (props) => {\n        const { x, y, payload } = props;\n        return (\n            <g transform={`translate(${x},${y})`}>\n                <text\n                    x={0}\n                    y={0}\n                    dy={16}\n                    textAnchor=\"end\"\n                    fill=\"#666\"\n                    transform=\"rotate(-35)\"\n                >\n                    {payload.value}\n                </text>\n            </g>\n        );\n    };\n    \n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            console.log(payload)\n            return (\n                <div className=\"daily-graph-tooltip\">\n                    <p style={{textAlign:'center'}}><b>{label}</b></p>\n                    <p>Total Cases : {numFormatter.format(payload[0].payload[\"Total\"])}</p>\n                    <p>Active Cases : {numFormatter.format(payload[0].payload[\"Active Cases\"])}</p>\n                    <p>Recoveries : {numFormatter.format(payload[0].payload[\"Recoveries\"])}</p>\n                    <p>Deaths : {numFormatter.format(payload[0].payload[\"Deaths\"])}</p>\n                </div>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <div className=\"regional-main-container\">\n            <div className=\"heading-container\">\n                <h1>Regional Cases</h1>\n                <h2>Total cases per region as of August 20, 2021</h2>\n            </div>\n\n            <div className=\"regional-chart-container\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart\n                        width={600}\n                        height={300}\n                        data={totals}\n                        margin={{\n                            top: 7,\n                            right: 30,\n                            left: 20,\n                            bottom: 7,\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"Region\" tick={<CustomizedAxisTick />} height={70} interval={0} />\n                        <YAxis dataKey=\"Total\" tickFormatter={tick => numFormatter.format(tick)} />\n                        {/* <Tooltip formatter={value => numFormatter.format(value)} /> */}\n                        <Tooltip content={<CustomTooltip />} />\n                        <Legend />\n                        {/* <Bar dataKey=\"Total\" fill=\"#8884d8\" /> */}\n                        <Bar dataKey=\"Active Cases\" stackId=\"a\" fill=\"#FDBF49\" />\n                        <Bar dataKey=\"Recoveries\" stackId=\"a\" fill=\"#8AD085\" />\n                        <Bar dataKey=\"Deaths\" stackId=\"a\" fill=\"#702F6B\" />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n\n            <div className=\"heading-container\">\n                <h2>Timeline of cases per region</h2>\n            </div>\n\n            <div className=\"regional-chart regional-chart1\">\n                <RegionalTable data={daily}/>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Regional","/home/yeahpoy/Desktop/c19db/src/components/news/news.jsx",["113","114","115"],"import axios from 'axios'\r\nimport React, { useMemo } from 'react'\r\nimport '../../styles/news.css'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport WeeklyCaseChart from './weeklyCaseChart'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { useState } from 'react'\r\nimport NewsCard from './newsCard'\r\nimport Pagination from './pagination'\r\n\r\nlet PageSize = 5\r\n\r\nconst NewsPage = (props) => {\r\n    // News and date data variables\r\n    const [dateInput, setDateInput] = useState(Date.now())\r\n    const [newsList, setNewsList] = useState([])\r\n\r\n    \r\n    // Pagination-related variables\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    \r\n    const currentNewsData = useMemo(() => {\r\n        const firstPageIndex = (currentPage - 1) * PageSize\r\n        const lastPageIndex = firstPageIndex + PageSize\r\n        return newsList.slice(firstPageIndex, lastPageIndex);\r\n    }, [currentPage, newsList])\r\n\r\n    // This will convert the output date from the date picker to 'YYYY-MM-DD'\r\n    function convertDateFormat(str) {\r\n        var date = new Date(str),\r\n          mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n          day = (\"0\" + date.getDate()).slice(-2);\r\n        return [date.getFullYear(), mnth, day].join(\"-\");\r\n    }\r\n\r\n    // Changes the state of the input date when user picks a date from the date picked\r\n    const handleDateChange = (date) => {\r\n        setDateInput(date)\r\n    }\r\n\r\n    // Call convertDateFormat and also gets the list of news from the server\r\n    const handleButtonClick = () => {\r\n        const newDate = convertDateFormat(dateInput)\r\n        getNews(newDate)\r\n    }\r\n\r\n    // This is where the GET request happens\r\n    const getNews = async (date) => {\r\n        const response = await axios.get(`http://localhost:5000/news/${date}`)\r\n        console.log(response.data.data)\r\n        setNewsList(response.data.data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"newsContainer\">\r\n            <div className=\"main-heading-container\">\r\n                <h1>Timeline And Events</h1>\r\n                <h3>See the latest updates of Covid-19 in the Philippines</h3>\r\n            </div>\r\n            \r\n            <WeeklyCaseChart/>\r\n            <div className=\"news-container\">\r\n                <h1>Get Latest Events</h1>\r\n                <div className=\"date-input-container\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Date picker inline\"\r\n                            value={dateInput}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <button onClick={handleButtonClick}>Show Events</button>\r\n                </div>\r\n\r\n                <div className=\"articles-container\">\r\n\r\n                    { newsList.length == 0 && \r\n                        <h2> No COVID-19 related news added in this date yet</h2>\r\n                    }\r\n\r\n                    \r\n                    { newsList.length > 0 && currentNewsData.map((article) => {\r\n                        const {news_title, news_link, news_source} = article\r\n                        return <NewsCard id={news_title} title={news_title} link={news_link} source={news_source} />\r\n                        })\r\n                    }\r\n                    \r\n                    <Pagination\r\n                        className=\"pagination-bar\"\r\n                        currentPage={currentPage}\r\n                        totalCount={newsList.length}\r\n                        pageSize={PageSize}\r\n                        onPageChange={page => setCurrentPage(page)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsPage","/home/yeahpoy/Desktop/c19db/src/components/news/pagination.js",[],"/home/yeahpoy/Desktop/c19db/src/components/home/overviewContainer.jsx",["116"],"import React, { useState, useEffect } from \"react\";\nimport '../../styles/overviewContainer.css'\nimport CaseDataBox from './caseData.jsx'\nimport CasesChart from \"./caseChart\";\n// import dateFormat from 'dateformat';\n\nfunction OverviewContainer() {\n    const [dt, setDt] = useState(new Date().toLocaleString());\n    \n\n    useEffect(() => {\n        // getData()\n        let secTimer = setInterval( () => {\n            setDt(new Date().toLocaleString())\n        },1000)\n\n        return () => {\n            clearInterval(secTimer)\n        };\n   \n    }, []);\n\n\n    //TO-DO: Change date format into dddd, mmmm, dS, yyyy\n    return(\n        <div className = \"overview-cont\">\n            <div className = \"headings\">\n                {/* <h1>COVID-19 Dashboard</h1> */}\n                <p>General Overview as of <b>{dt}</b></p>\n            </div>\n            <div className = \"case-data-ov\">\n                <CaseDataBox/>\n            </div>\n        </div>\n    );\n}\nexport default OverviewContainer;","/home/yeahpoy/Desktop/c19db/src/components/home/caseChart.jsx",["117"],"import React, { useEffect,useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from \"recharts\";\nimport axios from 'axios'\nimport dateFormat from 'dateformat'\n\nexport default function CasesChart() {\n    const [data, setData] = useState({});\n\n    const numFormatter = new Intl.NumberFormat('en-US')\n\n    // load Data from server\n    useEffect(() => {\n        try{\n            let chartData;\n    \n            async function getData() {\n                const response = await axios.get('http://localhost:5000/home')\n                chartData = response.data.data\n\n                setData(chartData.counts)\n            }\n            getData()\n        }catch (e){\n            console.error(e)\n        }\n    }, []);\n    console.log(data)\n\n    // make function that follows rechart's data format\n    // const daily = [\n    //     {\n    //         \"date\": date,\n    //         \"newcases\": cases,\n    //     }\n    // ]\n    \n    var dailyArr=[]\n    function reformatDaily() {\n        let a;\n        for(a in data.daily){\n            dailyArr.push(\n                {\"date\":dateFormat(a,\"mediumDate\"), \n                \"New Cases\": data.daily[a].newCase,\n                \"Recoveries\": data.daily[a].recovery,\n                \"Deaths\": data.daily[a].death,\n                // \"Cumulative Deaths up to this Day\": data.daily[a].cumulative,\n                \"Cumulative\": data.daily[a].cumulative,\n                }\n            )       \n        }\n    }\n\n    reformatDaily();\n    // console.log(dailyArr);\n\n    var weeklyArr=[]\n    function reformatWeekly() {\n        let a;\n        for(a in data.weekly){\n            weeklyArr.push(\n                {\"date\":dateFormat(a,\"mediumDate\"), \n                \"New Cases\": data.weekly[a].newCase,\n                \"Recoveries\": data.weekly[a].recovery,\n                \"Deaths\": data.weekly[a].death,\n                }\n            );\n        }\n    }\n\n    reformatWeekly();\n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            // console.log(payload)\n            return (\n            <div className=\"daily-graph-tooltip\">\n                <p className=\"tooltip-date\">{`${label}`}</p>\n                <p className=\"tooltip-data\"><b>Cases: </b>{`${numFormatter.format(payload[0].value)}`}</p>\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${numFormatter.format(payload[0].payload[\"Recoveries\"])}`}</p>\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${numFormatter.format(payload[0].payload[\"Deaths\"])}`}</p>\n                <p className=\"tooltip-data\"><b>Cumulative Cases:</b> <br/>{`${numFormatter.format(payload[0].payload[\"Cumulative\"])}`}</p>\n            </div>\n            );\n        }\n        return null;\n    };\n\n    const WeeklyTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            // console.log(payload)\n            return (\n            <div className=\"daily-graph-tooltip\">\n                <p className=\"tooltip-date\">{`${label}`}</p>\n                <p className=\"tooltip-data\"><b>Cases: </b>{`${numFormatter.format(payload[0].value)}`}</p>\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${numFormatter.format(payload[0].payload[\"Recoveries\"])}`}</p>\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${numFormatter.format(payload[0].payload[\"Deaths\"])}`}</p>\n                <p className=\"tooltip-data\"><b>Cumulative Cases:</b> <br/>{`${numFormatter.format(payload[0].payload[\"Cumulative\"])}`}</p>\n            </div>\n            );\n        }\n        return null;\n    };\n\n    return (\n            <div className = \"main-chart\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart\n                    width={1150}\n                    height={340}\n                    data={dailyArr}\n                    margin={{\n                        top: 0,\n                        right: 0,\n                        left: 0,\n                        bottom: 0,\n                    }}\n                    >\n                        \n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\n                        <YAxis dataKey=\"New Cases\" tickFormatter={tick => numFormatter.format(tick)} />\n                        <Tooltip content={<CustomTooltip/>}/>\n                        <Line type=\"monotone\" dataKey=\"New Cases\" stroke=\"rgba(33,147,176,1)\" dot = {{r:1}} activeDot={{ r: 4 }} />\n                        <Legend />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n    );\n}\n","/home/yeahpoy/Desktop/c19db/src/components/home/information.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/home/regionalOverview.jsx",["118","119","120","121","122","123","124","125"],"\nimport React, { useState } from 'react'\nimport '../../styles/regionalOverview.css'\nimport RegionalPieChart from './regionalPieChart'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport Loader from './loader'\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst RegionNames = {\n    BARMM: \"BARMM\",\n    CAR: \"CAR\",\n    NCR: \"NCR\",\n    R1: \"Ilocos Region\",\n    R2: \"Cagayan Valley\",\n    R3: \"Central Luzon\",\n    R4a: \"CALABARZON\",\n    R4b: \"MIMAROPA\",\n    R5: \"Bicol Region\",\n    R6: \"Western Visayas\",\n    R7: \"Central Visayas\",\n    R8: \"Eastern Visayas\",\n    R9: \"Zamboangaa Peninsula\",\n    R10: \"Northern Mindanao\",\n    R11: \"Davao Region\",\n    R12: \"Soccsksargen\",\n    CARAGA: \"CARAGA\",\n    ROF: \"ROF\"\n}\n\nfunction formatData(data) {\n    console.log(\"in formatData function\")\n  \n    const formattedData = []\n    Object.keys(data).forEach((d) => {\n      if(d != 'total') {\n        formattedData.push({\n          name: d,\n          value: data[d]\n        })\n      }\n    })  \n    \n    return formattedData\n}\n\nconst RegionalOverview = (props) => {\n    const [provinceTotals, setProvinceTotals] = useState([])\n    const [regions, setRegions] = useState([])\n    const [chartData, setChartData] = useState([])  \n\n    useEffect(() => {   \n        async function getRegionalData() {\n            try {\n                const response = await axios.get('http://localhost:5000/regional')\n                setProvinceTotals(response.data.data.provinceTotals)\n                setRegions(Object.keys(response.data.data.provinceTotals))\n            } catch(err) {\n                console.log(err)\n            }\n        }\n        getRegionalData()\n        \n    }, [])\n    \n    regions.forEach((r) => {\n        chartData.push(formatData(provinceTotals[r]))\n    })\n\n    console.log(chartData)\n    \n\n\n    return(\n        <>\n            <div className=\"heading\">\n                <h1>Regional Cases Overview</h1>\n            </div>\n\n            <div className=\"regional-overview-container\">\n                <div className=\"region-container region-container1\">              \n                    <RegionalPieChart chartColor=\"#FF716E\" data={chartData[0]} name={regions[0]}/>\n                    <h2>{RegionNames[regions[0]]}</h2>\n                </div>\n\n                <div className=\"region-container region-container1\">              \n                    <RegionalPieChart chartColor=\"#67D0E9\" data={chartData[1]} name={regions[1]}/>\n                    <h2>{RegionNames[regions[1]]}</h2>\n                </div>\n\n                <div className=\"region-container region-container1\">              \n                    <RegionalPieChart chartColor=\"#64B88D\" data={chartData[2]} name={regions[2]}/>\n                    <h2>{RegionNames[regions[2]]}</h2>\n                </div>\n\n                <div className=\"region-container region-container1\">              \n                    <RegionalPieChart chartColor=\"#FF9B05\" data={chartData[3]} name={regions[3]}/>\n                    <h2>{RegionNames[regions[3]]}</h2>\n                </div>\n\n            </div>  \n\n            <div className=\"see-more-regional\">\n                <a href=\"/regional\"><h3> Regional Statistics And Analyses </h3></a>\n            </div>\n        </>\n    )\n}\n\n\nexport default RegionalOverview","/home/yeahpoy/Desktop/c19db/src/components/home/vaxChart.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/regional/regionalTable.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/news/newsCard.jsx",["126"],"import React from 'react'\r\nimport '../../styles/newsCard.css'\r\n\r\n\r\nconst NewsCard = ({title, link, source}) => {\r\n\r\n    return (\r\n        <a href={link} target=\"_blank\">\r\n            \r\n            <div className=\"news-card-container\">\r\n                <h1>{title}</h1>\r\n                <p>Source: {source}</p>\r\n            </div>\r\n\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default NewsCard","/home/yeahpoy/Desktop/c19db/src/components/news/weeklyCaseChart.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/home/caseData.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/news/usePagination.jsx",["127"],"import React, {useMemo} from 'react'\r\n\r\n\r\n//Pagination tutorial source: https://www.freecodecamp.org/news/build-a-custom-pagination-component-in-react/\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\n\r\nexport const usePagination = ({\r\n    totalCount,\r\n    pageSize,\r\n    siblingCount = 1,\r\n    currentPage\r\n}) => {\r\n        const paginationRange = useMemo(() => {\r\n\r\n        const totalPageCount = Math.ceil(totalCount / pageSize)\r\n        const totalPageNumbers = siblingCount + 5\r\n\r\n\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n          currentPage + siblingCount,\r\n          totalPageCount\r\n        );\r\n\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n      \r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(\r\n              totalPageCount - rightItemCount + 1,\r\n              totalPageCount\r\n            );\r\n\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n          let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n          return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        }\r\n\r\n    }, [totalCount, pageSize, siblingCount, currentPage])\r\n\r\n    return paginationRange\r\n}\r\n","/home/yeahpoy/Desktop/c19db/src/components/home/regionalPieChart.jsx",["128","129","130","131"],"import React, {PureComponent,useState, useEffect} from 'react'\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\nconst RegionalPieChart = (props) => {\r\n  return(\r\n      <PieChart width={200} height={200}>\r\n        <Pie\r\n          dataKey=\"value\"\r\n          isAnimationActive={false}\r\n          data={props.data}\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          outerRadius={90}\r\n          fill={props.chartColor}\r\n\r\n        />\r\n        <Tooltip />\r\n      </PieChart>\r\n  )\r\n}\r\n  \r\n\r\nexport default RegionalPieChart\r\n\r\n","/home/yeahpoy/Desktop/c19db/src/components/home/loader.jsx",[],"/home/yeahpoy/Desktop/c19db/src/components/regional/regionalLineChart.jsx",[],{"ruleId":"132","severity":1,"message":"133","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":18,"column":8,"nodeType":"134","messageId":"135","endLine":18,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":20,"column":8,"nodeType":"134","messageId":"135","endLine":20,"endColumn":12},{"ruleId":"132","severity":1,"message":"138","line":3,"column":25,"nodeType":"134","messageId":"135","endLine":3,"endColumn":29},{"ruleId":"132","severity":1,"message":"139","line":3,"column":69,"nodeType":"134","messageId":"135","endLine":3,"endColumn":82},{"ruleId":"132","severity":1,"message":"140","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":12},{"ruleId":"132","severity":1,"message":"141","line":9,"column":3,"nodeType":"134","messageId":"135","endLine":9,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":90,"column":39,"nodeType":"144","messageId":"145","endLine":90,"endColumn":41},{"ruleId":"132","severity":1,"message":"146","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":18},{"ruleId":"132","severity":1,"message":"147","line":97,"column":11,"nodeType":"134","messageId":"135","endLine":97,"endColumn":24},{"ruleId":"132","severity":1,"message":"148","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":25},{"ruleId":"132","severity":1,"message":"149","line":8,"column":8,"nodeType":"134","messageId":"135","endLine":8,"endColumn":14},{"ruleId":"132","severity":1,"message":"150","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":18},{"ruleId":"132","severity":1,"message":"151","line":9,"column":20,"nodeType":"134","messageId":"135","endLine":9,"endColumn":23},{"ruleId":"132","severity":1,"message":"152","line":9,"column":25,"nodeType":"134","messageId":"135","endLine":9,"endColumn":32},{"ruleId":"132","severity":1,"message":"153","line":9,"column":34,"nodeType":"134","messageId":"135","endLine":9,"endColumn":53},{"ruleId":"142","severity":1,"message":"154","line":37,"column":12,"nodeType":"144","messageId":"145","endLine":37,"endColumn":14},{"ruleId":"132","severity":1,"message":"155","line":51,"column":23,"nodeType":"134","messageId":"135","endLine":51,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":8,"column":9,"nodeType":"158","messageId":"159","endLine":8,"endColumn":40,"fix":"160"},{"ruleId":"132","severity":1,"message":"161","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"162","line":1,"column":16,"nodeType":"134","messageId":"135","endLine":1,"endColumn":29},{"ruleId":"132","severity":1,"message":"163","line":1,"column":30,"nodeType":"134","messageId":"135","endLine":1,"endColumn":38},{"ruleId":"132","severity":1,"message":"164","line":1,"column":40,"nodeType":"134","messageId":"135","endLine":1,"endColumn":49},{"ruleId":"132","severity":1,"message":"153","line":2,"column":34,"nodeType":"134","messageId":"135","endLine":2,"endColumn":53},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'News' is defined but never used.","'Cell' is defined but never used.","'CustomTooltip' is defined but never used.","'Grid' is defined but never used.","'KeyboardTimePicker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CasesChart' is defined but never used.","'WeeklyTooltip' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'Loader' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Tooltip' is defined but never used.","'ResponsiveContainer' is defined but never used.","Expected '!==' and instead saw '!='.","'setChartData' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"165","text":"166"},"'React' is defined but never used.","'PureComponent' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",[168,168]," rel=\"noreferrer\""]