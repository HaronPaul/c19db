[{"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\index.js":"1","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\reportWebVitals.js":"2","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\App.js":"3","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\news.jsx":"4","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\vaccinations\\vaccinations.jsx":"5","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\footer.jsx":"6","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\navigationBar.jsx":"7","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\regional\\regional.jsx":"8","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\informationPage\\infoPage.jsx":"9","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\homepage.jsx":"10","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\pagination.js":"11","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\newsCard.jsx":"12","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\weeklyCaseChart.jsx":"13","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\regional\\regionalTable.jsx":"14","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\regionalOverview.jsx":"15","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\information.jsx":"16","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\vaxChart.jsx":"17","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\caseChart.jsx":"18","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\overviewContainer.jsx":"19","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\caseData.jsx":"20","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\usePagination.jsx":"21","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\regionalPieChart.jsx":"22","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\loader.jsx":"23"},{"size":226,"mtime":1629348842669,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1629017258255,"results":"26","hashOfConfig":"25"},{"size":1176,"mtime":1629388465322,"results":"27","hashOfConfig":"25"},{"size":4279,"mtime":1629265456730,"results":"28","hashOfConfig":"25"},{"size":7410,"mtime":1629388465332,"results":"29","hashOfConfig":"25"},{"size":205,"mtime":1629017258098,"results":"30","hashOfConfig":"25"},{"size":577,"mtime":1629388465326,"results":"31","hashOfConfig":"25"},{"size":2230,"mtime":1629388465326,"results":"32","hashOfConfig":"25"},{"size":963,"mtime":1629388465326,"results":"33","hashOfConfig":"25"},{"size":1854,"mtime":1629350602930,"results":"34","hashOfConfig":"25"},{"size":2307,"mtime":1629391973917,"results":"35","hashOfConfig":"25"},{"size":382,"mtime":1629391965866,"results":"36","hashOfConfig":"25"},{"size":2741,"mtime":1629198736931,"results":"37","hashOfConfig":"25"},{"size":246,"mtime":1629388465326,"results":"38","hashOfConfig":"25"},{"size":3451,"mtime":1629388465324,"results":"39","hashOfConfig":"25"},{"size":4582,"mtime":1629073729005,"results":"40","hashOfConfig":"25"},{"size":3044,"mtime":1629349619308,"results":"41","hashOfConfig":"25"},{"size":4484,"mtime":1629197908710,"results":"42","hashOfConfig":"25"},{"size":989,"mtime":1629017258177,"results":"43","hashOfConfig":"25"},{"size":3225,"mtime":1629073729000,"results":"44","hashOfConfig":"25"},{"size":2019,"mtime":1629265456737,"results":"45","hashOfConfig":"25"},{"size":549,"mtime":1629357098026,"results":"46","hashOfConfig":"25"},{"size":199,"mtime":1629351057262,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1thu4q7",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\index.js",["106"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n",["107","108"],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\reportWebVitals.js",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\App.js",["109"],"import React from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n//   Redirect,\r\n//   useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport NavigationBar from './components/navigationBar'\r\nimport Home from './components/home/homepage'\r\nimport Vaccinations from './components/vaccinations/vaccinations';\r\nimport Regional from './components/regional/regional'\r\nimport NewsPage from './components/news/news';\r\nimport Footer from './components/footer'\r\nimport InfoPage from './components/informationPage/infoPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <BrowserRouter>\r\n          <NavigationBar/>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home}/>\r\n                    {/* <Route path=\"*\" render={() => <Redirect to=\"/\" />} /> */}\r\n              <Route exact path=\"/vaccinations\" component={Vaccinations}/>\r\n              <Route exact path=\"/regional\" component={Regional}/>\r\n              <Route exact path=\"/news\" component={NewsPage}/>\r\n              <Route exact path=\"/info\" component={InfoPage}/>\r\n\r\n            </Switch>\r\n        \r\n        </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\news.jsx",["110","111","112"],"import axios from 'axios'\r\nimport React, { useMemo } from 'react'\r\nimport '../../styles/news.css'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport WeeklyCaseChart from './weeklyCaseChart'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { useState } from 'react'\r\nimport NewsCard from './newsCard'\r\nimport Pagination from './pagination'\r\n\r\nlet PageSize = 5\r\n\r\nconst NewsPage = (props) => {\r\n    // News and date data variables\r\n    const [dateInput, setDateInput] = useState(Date.now())\r\n    const [newsList, setNewsList] = useState([])\r\n\r\n    \r\n    // Pagination-related variables\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    \r\n    const currentNewsData = useMemo(() => {\r\n        const firstPageIndex = (currentPage - 1) * PageSize\r\n        const lastPageIndex = firstPageIndex + PageSize\r\n        return newsList.slice(firstPageIndex, lastPageIndex);\r\n    }, [currentPage, newsList])\r\n\r\n    // This will convert the output date from the date picker to 'YYYY-MM-DD'\r\n    function convertDateFormat(str) {\r\n        var date = new Date(str),\r\n          mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n          day = (\"0\" + date.getDate()).slice(-2);\r\n        return [date.getFullYear(), mnth, day].join(\"-\");\r\n    }\r\n\r\n    // Changes the state of the input date when user picks a date from the date picked\r\n    const handleDateChange = (date) => {\r\n        setDateInput(date)\r\n    }\r\n\r\n    // Call convertDateFormat and also gets the list of news from the server\r\n    const handleButtonClick = () => {\r\n        const newDate = convertDateFormat(dateInput)\r\n        getNews(newDate)\r\n    }\r\n\r\n    // This is where the GET request happens\r\n    const getNews = async (date) => {\r\n        const response = await axios.get(`http://localhost:5000/news/${date}`)\r\n        console.log(response.data.data)\r\n        setNewsList(response.data.data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"newsContainer\">\r\n            <div className=\"main-heading-container\">\r\n                <h1>Timeline And Events</h1>\r\n                <h3>See the latest updates of Covid-19 in the Philippines</h3>\r\n            </div>\r\n            \r\n            <WeeklyCaseChart/>\r\n            <div className=\"news-container\">\r\n                <h1>Get Latest Events</h1>\r\n                <div className=\"date-input-container\">\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Date picker inline\"\r\n                            value={dateInput}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    <button onClick={handleButtonClick}>Show Events</button>\r\n                </div>\r\n\r\n                <div className=\"articles-container\">\r\n\r\n                    { newsList.length == 0 && \r\n                        <h2> No COVID-19 related news added in this date yet</h2>\r\n                    }\r\n\r\n                    \r\n                    { newsList.length > 0 && currentNewsData.map((article) => {\r\n                        const {news_title, news_link, news_source} = article\r\n                        return <NewsCard id={news_title} title={news_title} link={news_link} source={news_source} />\r\n                        })\r\n                    }\r\n                    \r\n                    <Pagination\r\n                        className=\"pagination-bar\"\r\n                        currentPage={currentPage}\r\n                        totalCount={newsList.length}\r\n                        pageSize={PageSize}\r\n                        onPageChange={page => setCurrentPage(page)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsPage","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\vaccinations\\vaccinations.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\footer.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\navigationBar.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\regional\\regional.jsx",["113"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport RegionalTable from './regionalTable';\r\nimport '../../styles/regional.css'\r\n\r\nconst Regional = (props) => {\r\n\r\n    const [totals, setTotals] = useState([])\r\n    const [daily, setDaily] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log(\"In regional page\")\r\n        try {\r\n            const getData = async() => {\r\n                const response = await axios.get('http://localhost:5000/regional')\r\n                setTotals(response.data.data.totals)\r\n                setDaily(response.data.data.daily)\r\n            }\r\n            getData()\r\n        } \r\n        catch(err) {\r\n            console.log(err)\r\n        }\r\n    }, [])\r\n\r\n    console.log(totals)\r\n    console.log(daily)\r\n\r\n    return (\r\n        <div className=\"regional-main-container\">\r\n            <div className=\"heading-container\">\r\n                <h1>Regional Cases</h1>\r\n                <h2>Total cases per region as of August __, 2021</h2>\r\n            </div>\r\n\r\n            <div className=\"regional-chart-container\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <BarChart\r\n                        width={600}\r\n                        height={300}\r\n                        data={totals}\r\n                        margin={{\r\n                            top: 7,\r\n                            right: 30,\r\n                            left: 20,\r\n                            bottom: 7,\r\n                        }}\r\n                        >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"region\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"cases\" fill=\"#8884d8\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n            \r\n            <div className=\"regional-chart regional-chart1\">\r\n                <RegionalTable data={daily}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Regional","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\informationPage\\infoPage.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\homepage.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\pagination.js",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\newsCard.jsx",["114"],"import React from 'react'\r\nimport '../../styles/newsCard.css'\r\n\r\n\r\nconst NewsCard = ({title, link, source}) => {\r\n\r\n    return (\r\n        <a href={link} target=\"_blank\">\r\n            \r\n            <div className=\"news-card-container\">\r\n                <h1>{title}</h1>\r\n                <p>Source: {source}</p>\r\n            </div>\r\n\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default NewsCard","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\weeklyCaseChart.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\regional\\regionalTable.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\regionalOverview.jsx",["115","116","117","118","119","120","121","122"],"import React, { useState } from 'react'\r\nimport '../../styles/regionalOverview.css'\r\nimport RegionalPieChart from './regionalPieChart'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport Loader from './loader'\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst RegionNames = {\r\n    BARMM: \"BARMM\",\r\n    CAR: \"CAR\",\r\n    NCR: \"NCR\",\r\n    R1: \"Ilocos Region\",\r\n    R2: \"Cagayan Valley\",\r\n    R3: \"Central Luzon\",\r\n    R4a: \"CALABARZON\",\r\n    R4b: \"MIMAROPA\",\r\n    R5: \"Bicol Region\",\r\n    R6: \"Western Visayas\",\r\n    R7: \"Central Visayas\",\r\n    R8: \"Eastern Visayas\",\r\n    R9: \"Zamboangaa Peninsula\",\r\n    R10: \"Northern Mindanao\",\r\n    R11: \"Davao Region\",\r\n    R12: \"Soccsksargen\",\r\n    CARAGA: \"CARAGA\",\r\n    ROF: \"ROF\"\r\n}\r\n\r\nfunction formatData(data) {\r\n    console.log(\"in formatData function\")\r\n  \r\n    const formattedData = []\r\n    Object.keys(data).forEach((d) => {\r\n      if(d != 'total') {\r\n        formattedData.push({\r\n          name: d,\r\n          value: data[d]\r\n        })\r\n      }\r\n    })  \r\n    \r\n    return formattedData\r\n}\r\n\r\nconst RegionalOverview = (props) => {\r\n    const [provinceTotals, setProvinceTotals] = useState([])\r\n    const [regions, setRegions] = useState([])\r\n    const [chartData, setChartData] = useState([])  \r\n\r\n    useEffect(() => {   \r\n        async function getRegionalData() {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/regional')\r\n                setProvinceTotals(response.data.data.provinceTotals)\r\n                setRegions(Object.keys(response.data.data.provinceTotals))\r\n            } catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getRegionalData()\r\n        \r\n    }, [])\r\n    \r\n    regions.forEach((r) => {\r\n        chartData.push(formatData(provinceTotals[r]))\r\n    })\r\n\r\n    console.log(chartData)\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n            <div className=\"heading\">\r\n                <h1>Regional Cases Overview</h1>\r\n            </div>\r\n\r\n            <div className=\"regional-overview-container\">\r\n                <div className=\"region-container region-container1\">              \r\n                    <RegionalPieChart chartColor=\"#FF716E\" data={chartData[0]} name={regions[0]}/>\r\n                    <h2>{RegionNames[regions[0]]}</h2>\r\n                </div>\r\n\r\n                <div className=\"region-container region-container1\">              \r\n                    <RegionalPieChart chartColor=\"#67D0E9\" data={chartData[1]} name={regions[1]}/>\r\n                    <h2>{RegionNames[regions[1]]}</h2>\r\n                </div>\r\n\r\n                <div className=\"region-container region-container1\">              \r\n                    <RegionalPieChart chartColor=\"#64B88D\" data={chartData[2]} name={regions[2]}/>\r\n                    <h2>{RegionNames[regions[2]]}</h2>\r\n                </div>\r\n\r\n                <div className=\"region-container region-container1\">              \r\n                    <RegionalPieChart chartColor=\"#FF9B05\" data={chartData[3]} name={regions[3]}/>\r\n                    <h2>{RegionNames[regions[3]]}</h2>\r\n                </div>\r\n\r\n            </div>  \r\n\r\n            <div className=\"see-more-regional\">\r\n                <a href=\"/regional\"><h3> Regional Statistics And Analyses </h3></a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegionalOverview","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\information.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\vaxChart.jsx",["123"],"import React, {useEffect, useState } from 'react';\r\nimport '../../styles/casesChart.css';\r\nimport axios from 'axios';\r\nimport {\r\n  AreaChart,\r\n//   ReferenceDot,\r\n//   ReferenceLine,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Area,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport dateFormat from 'dateformat'\r\n\r\n\r\n\r\n\r\nconst VaxChart = () => {\r\n    const [vaxData,setVaxData] = useState({});\r\n\r\n    const intlNumberFormat = new Intl.NumberFormat('en-US')\r\n\r\n    useEffect(() => {\r\n        try{\r\n            async function getData() {\r\n                const response = await axios.get('http://localhost:5000/vaccinations')\r\n                // console.log(response.data.data)\r\n\r\n                setVaxData(response.data.data)\r\n            }\r\n            getData()\r\n        }catch (e){\r\n            console.log('Error on fetching data from vaccinations route', e)\r\n        }\r\n    }, []);\r\n    console.log(vaxData);\r\n\r\n    /**\r\n        Make a funciton that transfroms vax data into recharts format\r\n        const daily = [\r\n            \"Date\" : date,\r\n            \"Vaccination Count\": vaxcount\r\n        ]\r\n    */\r\n\r\n    var daily = []\r\n    \r\n    function transformVaxData(){\r\n        let a;\r\n        for(a in vaxData.graphData){\r\n            if(vaxData.graphData[a].total_vaccinations !== 0){\r\n                daily.push(\r\n                    {\r\n                        \"date\":dateFormat(vaxData.graphData[a].case_date,\"mediumDate\"),\r\n                        \"Vaccination Count\": vaxData.graphData[a].total_vaccinations\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    transformVaxData()\r\n\r\n    console.log(daily)\r\n\r\n\r\n    return(\r\n        <div className= \"main-chart\" id=\"vax-chart\">\r\n            <ResponsiveContainer width=\"100%\" length=\"100%\">\r\n                <AreaChart\r\n                width={1150}\r\n                height={340}\r\n                data={daily}\r\n                margin={{\r\n                top: 30,\r\n                right: 30,\r\n                left: 30,\r\n                bottom: 30,\r\n                }}>\r\n                    <defs>\r\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"rgba(255,195,113,1)\" stopOpacity={0.8}/>\r\n                            <stop offset=\"98%\" stopColor=\"rgba(255,195,113,1)\" stopOpacity={0}/>\r\n                        </linearGradient>\r\n                    </defs>\r\n                       \r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\r\n                    <YAxis type=\"number\" interval = \"preserveStartEnd\"/>\r\n                    <Tooltip/>\r\n                    <Area type=\"monotone\" dataKey=\"Vaccination Count\" stroke=\"rgba(255,195,113,1)\" fillOpacity={1} fill=\"url(#colorUv)\" />\r\n                    <Legend />\r\n        \r\n                        \r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VaxChart;","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\caseChart.jsx",["124"],"import React, { useEffect,useState } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport axios from 'axios'\r\nimport dateFormat from 'dateformat'\r\n\r\nexport default function CasesChart() {\r\n    const [data, setData] = useState({});\r\n\r\n    // load Data from server\r\n    useEffect(() => {\r\n        try{\r\n            let chartData;\r\n    \r\n            async function getData() {\r\n                const response = await axios.get('http://localhost:5000/home')\r\n                chartData = response.data.data\r\n\r\n                setData(chartData.counts)\r\n            }\r\n            getData()\r\n        }catch (e){\r\n            console.error(e)\r\n        }\r\n    }, []);\r\n    console.log(data)\r\n\r\n    // make function that follows rechart's data format\r\n    // const daily = [\r\n    //     {\r\n    //         \"date\": date,\r\n    //         \"newcases\": cases,\r\n    //     }\r\n    // ]\r\n    \r\n    var dailyArr=[]\r\n    function reformatDaily() {\r\n        let a;\r\n        for(a in data.daily){\r\n            dailyArr.push(\r\n                {\"date\":dateFormat(a,\"mediumDate\"), \r\n                \"New Cases\": data.daily[a].newCase,\r\n                \"Recoveries\": data.daily[a].recovery,\r\n                \"Deaths\": data.daily[a].death,\r\n                // \"Cumulative Deaths up to this Day\": data.daily[a].cumulative,\r\n                \"Cumulative\": data.daily[a].cumulative,\r\n                }\r\n            )       \r\n        }\r\n    }\r\n\r\n    reformatDaily();\r\n    // console.log(dailyArr);\r\n\r\n    var weeklyArr=[]\r\n    function reformatWeekly() {\r\n        let a;\r\n        for(a in data.weekly){\r\n            weeklyArr.push(\r\n                {\"date\":dateFormat(a,\"mediumDate\"), \r\n                \"New Cases\": data.weekly[a].newCase,\r\n                \"Recoveries\": data.weekly[a].recovery,\r\n                \"Deaths\": data.weekly[a].death,\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    reformatWeekly();\r\n\r\n    const CustomTooltip = ({ active, payload, label }: any) => {\r\n        if (active && payload && payload.length) {\r\n            // console.log(payload)\r\n            return (\r\n            <div className=\"daily-graph-tooltip\">\r\n                <p className=\"tooltip-date\">{`${label}`}</p>\r\n                <p className=\"tooltip-data\"><b>Cases: </b>{`${payload[0].value}`}</p>\r\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${payload[0].payload[\"Recoveries\"]}`}</p>\r\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${payload[0].payload[\"Deaths\"]}`}</p>\r\n                <p className=\"tooltip-data\"><b>Cumulative Cases:</b> <br/>{`${payload[0].payload[\"Cumulative\"]}`}</p>\r\n            </div>\r\n            );\r\n    }\r\n        return null;\r\n    };\r\n\r\n    const WeeklyTooltip = ({ active, payload, label }: any) => {\r\n        if (active && payload && payload.length) {\r\n            // console.log(payload)\r\n            return (\r\n            <div className=\"daily-graph-tooltip\">\r\n                <p className=\"tooltip-date\">{`${label}`}</p>\r\n                <p className=\"tooltip-data\"><b>Cumulative Cases: </b>{`${payload[0].value}`}</p>\r\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${payload[0].payload[\"Recoveries\"]}`}</p>\r\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${payload[0].payload[\"Deaths\"]}`}</p>\r\n            </div>\r\n            );\r\n    }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n            <div className = \"main-chart\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <LineChart\r\n                    width={1150}\r\n                    height={340}\r\n                    data={dailyArr}\r\n                    margin={{\r\n                        top: 0,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 0,\r\n                    }}\r\n                    >\r\n                        \r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\r\n                        <YAxis dataKey=\"New Cases\" />\r\n                        <Tooltip content={<CustomTooltip/>}/>\r\n                        <Line type=\"monotone\" dataKey=\"New Cases\" stroke=\"rgba(33,147,176,1)\" dot = {{r:1}} activeDot={{ r: 4 }} />\r\n                        <Legend />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n    );\r\n}\r\n","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\overviewContainer.jsx",["125"],"import React, { useState, useEffect } from \"react\";\nimport '../../styles/overviewContainer.css'\nimport CaseDataBox from './caseData.jsx'\nimport CasesChart from \"./caseChart\";\n// import dateFormat from 'dateformat';\n\nfunction OverviewContainer() {\n    const [dt, setDt] = useState(new Date().toLocaleString());\n    \n\n    useEffect(() => {\n        // getData()\n        let secTimer = setInterval( () => {\n            setDt(new Date().toLocaleString())\n        },1000)\n\n        return () => {\n            clearInterval(secTimer)\n        };\n   \n    }, []);\n\n\n    //TO-DO: Change date format into dddd, mmmm, dS, yyyy\n    return(\n        <div className = \"overview-cont\">\n            <div className = \"headings\">\n                {/* <h1>COVID-19 Dashboard</h1> */}\n                <p>General Overview as of <b>{dt}</b></p>\n            </div>\n            <div className = \"case-data-ov\">\n                <CaseDataBox/>\n            </div>\n        </div>\n    );\n}\nexport default OverviewContainer;","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\caseData.jsx",[],"C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\news\\usePagination.jsx",["126"],"import React, {useMemo} from 'react'\r\n\r\n\r\n//Pagination tutorial source: https://www.freecodecamp.org/news/build-a-custom-pagination-component-in-react/\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\n\r\nexport const usePagination = ({\r\n    totalCount,\r\n    pageSize,\r\n    siblingCount = 1,\r\n    currentPage\r\n}) => {\r\n        const paginationRange = useMemo(() => {\r\n\r\n        const totalPageCount = Math.ceil(totalCount / pageSize)\r\n        const totalPageNumbers = siblingCount + 5\r\n\r\n\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n          currentPage + siblingCount,\r\n          totalPageCount\r\n        );\r\n\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n      \r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(\r\n              totalPageCount - rightItemCount + 1,\r\n              totalPageCount\r\n            );\r\n\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n          let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n          return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        }\r\n\r\n    }, [totalCount, pageSize, siblingCount, currentPage])\r\n\r\n    return paginationRange\r\n}\r\n","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\regionalPieChart.jsx",["127","128","129","130"],"import React, {PureComponent,useState, useEffect} from 'react'\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\nconst RegionalPieChart = (props) => {\r\n  return(\r\n      <PieChart width={200} height={200}>\r\n        <Pie\r\n          dataKey=\"value\"\r\n          isAnimationActive={false}\r\n          data={props.data}\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          outerRadius={90}\r\n          fill={props.chartColor}\r\n\r\n        />\r\n        <Tooltip />\r\n      </PieChart>\r\n  )\r\n}\r\n  \r\n\r\nexport default RegionalPieChart\r\n\r\n","C:\\Users\\Haron Paul Lorente\\Desktop\\c19db\\src\\components\\home\\loader.jsx",[],{"ruleId":"131","severity":1,"message":"132","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":23},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"131","severity":1,"message":"139","line":18,"column":8,"nodeType":"133","messageId":"134","endLine":18,"endColumn":14},{"ruleId":"131","severity":1,"message":"140","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":12},{"ruleId":"131","severity":1,"message":"141","line":9,"column":3,"nodeType":"133","messageId":"134","endLine":9,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":90,"column":39,"nodeType":"144","messageId":"145","endLine":90,"endColumn":41},{"ruleId":"131","severity":1,"message":"146","line":3,"column":25,"nodeType":"133","messageId":"134","endLine":3,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":8,"column":9,"nodeType":"149","messageId":"150","endLine":8,"endColumn":40,"fix":"151"},{"ruleId":"131","severity":1,"message":"152","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":25},{"ruleId":"131","severity":1,"message":"153","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":14},{"ruleId":"131","severity":1,"message":"154","line":8,"column":10,"nodeType":"133","messageId":"134","endLine":8,"endColumn":18},{"ruleId":"131","severity":1,"message":"155","line":8,"column":20,"nodeType":"133","messageId":"134","endLine":8,"endColumn":23},{"ruleId":"131","severity":1,"message":"156","line":8,"column":25,"nodeType":"133","messageId":"134","endLine":8,"endColumn":32},{"ruleId":"131","severity":1,"message":"157","line":8,"column":34,"nodeType":"133","messageId":"134","endLine":8,"endColumn":53},{"ruleId":"142","severity":1,"message":"158","line":36,"column":12,"nodeType":"144","messageId":"145","endLine":36,"endColumn":14},{"ruleId":"131","severity":1,"message":"159","line":50,"column":23,"nodeType":"133","messageId":"134","endLine":50,"endColumn":35},{"ruleId":"131","severity":1,"message":"160","line":24,"column":11,"nodeType":"133","messageId":"134","endLine":24,"endColumn":27},{"ruleId":"131","severity":1,"message":"161","line":95,"column":11,"nodeType":"133","messageId":"134","endLine":95,"endColumn":24},{"ruleId":"131","severity":1,"message":"162","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":18},{"ruleId":"131","severity":1,"message":"163","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"164","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":29},{"ruleId":"131","severity":1,"message":"165","line":1,"column":30,"nodeType":"133","messageId":"134","endLine":1,"endColumn":38},{"ruleId":"131","severity":1,"message":"166","line":1,"column":40,"nodeType":"133","messageId":"134","endLine":1,"endColumn":49},{"ruleId":"131","severity":1,"message":"157","line":2,"column":34,"nodeType":"133","messageId":"134","endLine":2,"endColumn":53},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'Footer' is defined but never used.","'Grid' is defined but never used.","'KeyboardTimePicker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Cell' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"169","text":"170"},"'FontAwesomeIcon' is defined but never used.","'Loader' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Tooltip' is defined but never used.","'ResponsiveContainer' is defined but never used.","Expected '!==' and instead saw '!='.","'setChartData' is assigned a value but never used.","'intlNumberFormat' is assigned a value but never used.","'WeeklyTooltip' is assigned a value but never used.","'CasesChart' is defined but never used.","'React' is defined but never used.","'PureComponent' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",[168,168]," rel=\"noreferrer\""]